{"ast":null,"code":"import _classCallCheck from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/bambang/Desktop/Mini-Project/src/components/Movies.js\";\nimport React, { Component } from 'react';\nimport MovieCard from './Movie/MovieCard';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as AppActions from '../actions';\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies(props) {\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movies).call(this, props));\n    _this.state = {\n      query: ''\n    };\n    _this.handleQueryChange = _this.handleQueryChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.actions.getMovies(1);\n    }\n  }, {\n    key: \"handleQueryChange\",\n    value: function handleQueryChange(e) {\n      this.setState({\n        query: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          movies = _this$props.movies,\n          actions = _this$props.actions;\n      var query = this.state.query.trim().toLowerCase();\n      var filteredData = movies;\n\n      if (query !== '') {\n        filteredData = movies.filter(function (item) {\n          return item.title.toLowerCase().startsWith(query);\n        });\n      }\n\n      var dataNodes = filteredData.map(function (item, index) {\n        return React.createElement(MovieCard, Object.assign({\n          key: index,\n          movie: item\n        }, actions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"header__search header__search--active\",\n        onSubmit: this.handleSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header__search-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a movie ...\",\n        value: this.state.query,\n        onChange: this.handleQueryChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"search\"))))))), React.createElement(\"div\", {\n        className: \"container_card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, dataNodes));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.movies\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(AppActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","map":{"version":3,"sources":["/home/bambang/Desktop/Mini-Project/src/components/Movies.js"],"names":["React","Component","MovieCard","bindActionCreators","connect","AppActions","Movies","props","state","query","handleQueryChange","bind","actions","getMovies","e","setState","target","value","preventDefault","movies","trim","toLowerCase","filteredData","filter","item","title","startsWith","dataNodes","map","index","handleSubmit","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport MovieCard from './Movie/MovieCard'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport * as AppActions from '../actions'\n\nclass Movies extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      query: ''\n    }\n\n    this.handleQueryChange = this.handleQueryChange.bind(this);\n  }\n\n  componentDidMount(){\n    this.props.actions.getMovies(1);\n  }\n\n  handleQueryChange(e){\n    this.setState({query: e.target.value})\n  }\n\n  handleSubmit(e){\n    e.preventDefault()\n  }\n\n  render(){\n    const {movies, actions} = this.props\n\n    let query = this.state.query.trim().toLowerCase()\n\n    let filteredData = movies\n\n    if(query !== ''){\n      filteredData =  movies.filter(item => item.title.toLowerCase().startsWith(query))\n    }\n\n    let dataNodes = filteredData.map(function(item, index){\n      return(\n        <MovieCard key={index} movie={item} {...actions} />\n      )\n    });\n\n    return(\n      <div>\n      <header>\n      <form className=\"header__search header__search--active\" onSubmit={this.handleSubmit.bind(this)}>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"header__search-content\">\n                <input type=\"text\" placeholder=\"Search for a movie ...\" value={this.state.query} onChange={this.handleQueryChange.bind(this)} />\n                <button type=\"submit\">search</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n      </header>\n      <div className=\"container_card\">\n        {dataNodes}\n      </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    movies: state.movies\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    actions: bindActionCreators(AppActions, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Movies)\n"]},"metadata":{},"sourceType":"module"}