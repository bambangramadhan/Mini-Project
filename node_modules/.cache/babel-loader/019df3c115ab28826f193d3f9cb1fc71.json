{"ast":null,"code":"import * as types from '../constants/ActionTypes';\nimport request from 'superagent';\nvar API_URL = 'https://api.themoviedb.org/3/';\nvar API_KEY = '5934c9098581e262e81b72718dbc9b0a';\n\nfunction getMoviesFailure() {\n  return {\n    type: types.MOVIES_FAILURE\n  };\n}\n\nfunction getMoviesSuccess(movies) {\n  return {\n    type: types.MOVIES_SUCCESS,\n    movies: movies\n  };\n}\n\nexport function getMovies(page) {\n  return function (dispatch) {\n    return request.get(\"\".concat(API_URL, \"movie/now_playing?api_key=\").concat(API_KEY, \"&region=ID&page=\").concat(page)).set('Accept', 'application/json').end(function (err, res) {\n      if (err) {\n        console.error(err);\n        dispatch(getMoviesFailure());\n      } else {\n        dispatch(getMoviesSuccess(res.body));\n      }\n    });\n  };\n}\n\nfunction getMovieFailure() {\n  return {\n    type: types.MOVIE_FAILURE\n  };\n}\n\nfunction getMovieSuccess(movie) {\n  return {\n    type: types.MOVIE_SUCCESS,\n    movie: movie\n  };\n}\n\nexport function getMovie(id) {\n  return function (dispatch) {\n    return request.get(\"\".concat(API_URL, \"movie/\").concat(id, \"?api_key=\").concat(API_KEY)).set('Accept', 'application/json').end(function (err, res) {\n      if (err) {\n        console.error(err);\n        dispatch(getMovieFailure());\n      } else {\n        dispatch(getMovieSuccess(res.body));\n      }\n    });\n  };\n}\n\nfunction getCastsFailure() {\n  return {\n    type: types.CASTS_FAILURE\n  };\n}\n\nfunction getCastsSuccess(movie) {\n  return {\n    type: types.CASTS_SUCCESS,\n    movie: movie\n  };\n}\n\nexport function getCasts(id) {\n  return function (dispatch) {\n    return request.get(\"\".concat(API_URL, \"movie/\").concat(id, \"/credits?api_key=\").concat(API_KEY)).set('Accept', 'application/json').end(function (err, res) {\n      if (err) {\n        console.error(err);\n        dispatch(getMovieFailure());\n      } else {\n        dispatch(getMovieSuccess(res.body));\n      }\n    });\n  };\n}\n\nfunction getRecommendedFailure() {\n  return {\n    type: types.RECOMMENDED_FAILURE\n  };\n}\n\nfunction getRecommendedSuccess(movie) {\n  return {\n    type: types.RECOMMENDED_SUCCESS,\n    movie: movie\n  };\n}\n\nexport function getRecommended(id) {\n  return function (dispatch) {\n    return request.get(\"\".concat(API_URL, \"movie/\").concat(id, \"?api_key=\").concat(API_KEY)).set('Accept', 'application/json').end(function (err, res) {\n      if (err) {\n        console.error(err);\n        dispatch(getMovieFailure());\n      } else {\n        dispatch(getMovieSuccess(res.body));\n      }\n    });\n  };\n}\n\nfunction getRelatedFailure() {\n  return {\n    type: types.RELATED_FAILURE\n  };\n}\n\nfunction getRelatedSuccess(movie) {\n  return {\n    type: types.RELATED_SUCCESS,\n    movie: movie\n  };\n}\n\nexport function getRelated(id) {\n  return function (dispatch) {\n    return request.get(\"\".concat(API_URL, \"movie/\").concat(id, \"?api_key=\").concat(API_KEY)).set('Accept', 'application/json').end(function (err, res) {\n      if (err) {\n        console.error(err);\n        dispatch(getMovieFailure());\n      } else {\n        dispatch(getMovieSuccess(res.body));\n      }\n    });\n  };\n}\n\nfunction getTrailersFailure() {\n  return {\n    type: types.TRAILERS_FAILURE\n  };\n}\n\nfunction getTrailersSuccess(movie) {\n  return {\n    type: types.TRAILERS_SUCCESS,\n    movie: movie\n  };\n}\n\nexport function getTrailers(id) {\n  return function (dispatch) {\n    return request.get(\"\".concat(API_URL, \"movie/\").concat(id, \"?api_key=\").concat(API_KEY)).set('Accept', 'application/json').end(function (err, res) {\n      if (err) {\n        console.error(err);\n        dispatch(getMovieFailure());\n      } else {\n        dispatch(getMovieSuccess(res.body));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/bambang/Desktop/Mini-Project/src/actions/index.js"],"names":["types","request","API_URL","API_KEY","getMoviesFailure","type","MOVIES_FAILURE","getMoviesSuccess","movies","MOVIES_SUCCESS","getMovies","page","dispatch","get","set","end","err","res","console","error","body","getMovieFailure","MOVIE_FAILURE","getMovieSuccess","movie","MOVIE_SUCCESS","getMovie","id","getCastsFailure","CASTS_FAILURE","getCastsSuccess","CASTS_SUCCESS","getCasts","getRecommendedFailure","RECOMMENDED_FAILURE","getRecommendedSuccess","RECOMMENDED_SUCCESS","getRecommended","getRelatedFailure","RELATED_FAILURE","getRelatedSuccess","RELATED_SUCCESS","getRelated","getTrailersFailure","TRAILERS_FAILURE","getTrailersSuccess","TRAILERS_SUCCESS","getTrailers"],"mappings":"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","sourcesContent":["import * as types from '../constants/ActionTypes'\nimport request from 'superagent'\n\nconst API_URL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '5934c9098581e262e81b72718dbc9b0a'\n\nfunction getMoviesFailure(){\n  return {type: types.MOVIES_FAILURE}\n}\n\nfunction getMoviesSuccess(movies){\n  return {type: types.MOVIES_SUCCESS, movies}\n}\n\nexport function getMovies(page){\n  return dispatch => {\n    return request\n    .get(`${API_URL}movie/now_playing?api_key=${API_KEY}&region=ID&page=${page}`)\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if(err){\n        console.error(err)\n        dispatch(getMoviesFailure())\n      }else{\n        dispatch(getMoviesSuccess(res.body))\n      }\n    })\n  }\n}\n\nfunction getMovieFailure(){\n  return {type: types.MOVIE_FAILURE}\n}\n\nfunction getMovieSuccess(movie){\n  return {type: types.MOVIE_SUCCESS, movie}\n}\n\nexport function getMovie(id){\n  return dispatch => {\n    return request\n    .get(`${API_URL}movie/${id}?api_key=${API_KEY}`)\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if(err){\n        console.error(err)\n        dispatch(getMovieFailure())\n      }else{\n        dispatch(getMovieSuccess(res.body))\n      }\n    })\n  }\n}\n\nfunction getCastsFailure(){\n  return {type: types.CASTS_FAILURE}\n}\n\nfunction getCastsSuccess(movie){\n  return {type: types.CASTS_SUCCESS, movie}\n}\n\nexport function getCasts(id){\n  return dispatch => {\n    return request\n    .get(`${API_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if(err){\n        console.error(err)\n        dispatch(getMovieFailure())\n      }else{\n        dispatch(getMovieSuccess(res.body))\n      }\n    })\n  }\n}\n\nfunction getRecommendedFailure(){\n  return {type: types.RECOMMENDED_FAILURE}\n}\n\nfunction getRecommendedSuccess(movie){\n  return {type: types.RECOMMENDED_SUCCESS, movie}\n}\n\nexport function getRecommended(id){\n  return dispatch => {\n    return request\n    .get(`${API_URL}movie/${id}?api_key=${API_KEY}`)\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if(err){\n        console.error(err)\n        dispatch(getMovieFailure())\n      }else{\n        dispatch(getMovieSuccess(res.body))\n      }\n    })\n  }\n}\n\nfunction getRelatedFailure(){\n  return {type: types.RELATED_FAILURE}\n}\n\nfunction getRelatedSuccess(movie){\n  return {type: types.RELATED_SUCCESS, movie}\n}\n\nexport function getRelated(id){\n  return dispatch => {\n    return request\n    .get(`${API_URL}movie/${id}?api_key=${API_KEY}`)\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if(err){\n        console.error(err)\n        dispatch(getMovieFailure())\n      }else{\n        dispatch(getMovieSuccess(res.body))\n      }\n    })\n  }\n}\n\nfunction getTrailersFailure(){\n  return {type: types.TRAILERS_FAILURE}\n}\n\nfunction getTrailersSuccess(movie){\n  return {type: types.TRAILERS_SUCCESS, movie}\n}\n\nexport function getTrailers(id){\n  return dispatch => {\n    return request\n    .get(`${API_URL}movie/${id}?api_key=${API_KEY}`)\n    .set('Accept', 'application/json')\n    .end((err, res) => {\n      if(err){\n        console.error(err)\n        dispatch(getMovieFailure())\n      }else{\n        dispatch(getMovieSuccess(res.body))\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}