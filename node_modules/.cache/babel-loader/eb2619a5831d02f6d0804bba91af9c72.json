{"ast":null,"code":"import _classCallCheck from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bambang/Desktop/Mini-Project/src/components/Movie/Trailers.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport YouTube from 'react-youtube';\nimport * as AppActions from '../../actions';\nimport loader from \"../../img/puff.svg\";\n\nvar Trailers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Trailers, _Component);\n\n  function Trailers() {\n    _classCallCheck(this, Trailers);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Trailers).apply(this, arguments));\n  }\n\n  _createClass(Trailers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.actions.getTrailers(this.props.movieID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var trailers = this.props.trailers;\n      var opts = {\n        height: '360',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 0\n        }\n      }; // console.log(this.props);\n\n      if (this.props.loading) {\n        return React.createElement(\"img\", {\n          className: \"loader\",\n          src: loader,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, trailers.map(function (item) {\n          return React.createElement(\"div\", {\n            key: item.id,\n            className: \"col-md-6\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(YouTube, {\n            videoId: item.key,\n            opts: opts,\n            onReady: _this._onReady,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"trailerdesc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, item.name)));\n        }));\n      }\n    }\n  }, {\n    key: \"_onReady\",\n    value: function _onReady(event) {\n      event.target.pauseVideo();\n    }\n  }]);\n\n  return Trailers;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    trailers: state.trailers,\n    loading: state.loading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(AppActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trailers);","map":{"version":3,"sources":["/home/bambang/Desktop/Mini-Project/src/components/Movie/Trailers.js"],"names":["React","Component","bindActionCreators","connect","YouTube","AppActions","Trailers","props","actions","getTrailers","movieID","trailers","opts","height","width","playerVars","autoplay","loading","loader","map","item","id","key","_onReady","name","event","target","pauseVideo","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAO,KAAKC,UAAZ,MAA4B,eAA5B;;;IAGMC,Q;;;;;;;;;;;;;wCAEe;AACjB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+B,KAAKF,KAAL,CAAWG,OAA1C;AACD;;;6BAEO;AAAA;;AAAA,UACCC,QADD,GACa,KAAKJ,KADlB,CACCI,QADD;AAEN,UAAMC,IAAI,GAAG;AACXC,QAAAA,MAAM,EAAE,KADG;AAEXC,QAAAA,KAAK,EAAE,MAFI;AAGXC,QAAAA,UAAU,EAAE;AAAE;AACZC,UAAAA,QAAQ,EAAE;AADA;AAHD,OAAb,CAFM,CAUN;;AACA,UAAI,KAAKT,KAAL,CAAWU,OAAf,EAAwB;AACtB,eAAO;AAAK,UAAA,SAAS,EAAC,QAAf;AAAwB,UAAA,GAAG,EAAEC,MAA7B;AAAqC,UAAA,GAAG,EAAC,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAEK;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCP,QAAQ,CAACQ,GAAT,CAAa,UAACC,IAAD,EAAU;AACtB,iBACE;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,YAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,OAAD;AACE,YAAA,OAAO,EAAED,IAAI,CAACE,GADhB;AAEE,YAAA,IAAI,EAAEV,IAFR;AAGE,YAAA,OAAO,EAAE,KAAI,CAACW,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAMA;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOH,IAAI,CAACI,IAAZ,CADF,CANA,CADF;AAYD,SAbA,CADD,CADF;AAkBD;AACF;;;6BAEUC,K,EAAO;AACdA,MAAAA,KAAK,CAACC,MAAN,CAAaC,UAAb;AACD;;;;EA3CoB1B,S;;AA8CvB,SAAS2B,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B,SAAM;AACJlB,IAAAA,QAAQ,EAAEkB,KAAK,CAAClB,QADZ;AAEJM,IAAAA,OAAO,EAAEY,KAAK,CAACZ;AAFX,GAAN;AAID;;AAED,SAASa,kBAAT,CAA4BC,QAA5B,EAAqC;AACnC,SAAM;AACJvB,IAAAA,OAAO,EAAEN,kBAAkB,CAACG,UAAD,EAAa0B,QAAb;AADvB,GAAN;AAGD;;AAED,eAAe5B,OAAO,CACpByB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbxB,QAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport YouTube from 'react-youtube';\nimport * as AppActions from '../../actions'\nimport loader from '../../img/puff.svg';\n\nclass Trailers extends Component {\n\n  componentDidMount(){\n    this.props.actions.getTrailers(this.props.movieID);\n  }\n\n  render(){\n    const {trailers} = this.props\n    const opts = {\n      height: '360',\n      width: '100%',\n      playerVars: { // https://developers.google.com/youtube/player_parameters\n        autoplay: 0\n      }\n    };\n\n    // console.log(this.props);\n    if (this.props.loading) {\n      return <img className=\"loader\" src={loader} alt=\"\" />;\n    }else{\n    return(\n      <div>\n      {trailers.map((item) => {\n        return(\n          <div key={item.id} className=\"col-md-6\">\n          <YouTube\n            videoId={item.key}\n            opts={opts}\n            onReady={this._onReady}\n            />\n          <div className=\"trailerdesc\">\n            <span>{item.name}</span>\n          </div>\n          </div>\n        )\n      })}\n      </div>\n    )\n  }\n}\n\n  _onReady(event) {\n    event.target.pauseVideo();\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    trailers: state.trailers,\n    loading: state.loading\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    actions: bindActionCreators(AppActions, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Trailers)\n"]},"metadata":{},"sourceType":"module"}