{"ast":null,"code":"import _classCallCheck from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bambang/Desktop/Mini-Project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bambang/Desktop/Mini-Project/src/components/Menu.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport NumberFormat from 'react-number-format';\nimport * as AppActions from '../actions';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu() {\n    _classCallCheck(this, Menu);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Menu).apply(this, arguments));\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var purchased = [];\n      var balance;\n\n      if (this.props.purchasedlist.length !== 0) {\n        purchased = JSON.parse(this.props.purchasedlist);\n        balance = purchased.balance;\n        purchased = purchased.purchasedlist;\n        reactLocalStorage.set('balance', this.props.purchasedlist);\n      } else if (reactLocalStorage.get('balance')) {\n        var JSONbalance = JSON.parse(reactLocalStorage.get('balance'));\n        purchased = JSONbalance.purchasedlist;\n        balance = JSONbalance.balance;\n      }\n\n      this.props.actions.initBalance(balance, purchased);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var purchased = [];\n      var balance = 0;\n\n      if (this.props.purchasedlist.length !== 0) {\n        purchased = JSON.parse(this.props.purchasedlist);\n        balance = purchased.balance;\n        purchased = purchased.purchasedlist;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sub_media\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left_bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        exact: true,\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Tokoflix\"))), React.createElement(\"div\", {\n        className: \"right_bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(NumberFormat, {\n        value: balance,\n        displayType: 'text',\n        thousandSeparator: true,\n        prefix: 'Rp ',\n        renderText: function renderText(value) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    purchasedlist: state.balance\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(AppActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","map":{"version":3,"sources":["/home/bambang/Desktop/Mini-Project/src/components/Menu.js"],"names":["React","Component","NavLink","reactLocalStorage","bindActionCreators","connect","NumberFormat","AppActions","Menu","purchased","balance","props","purchasedlist","length","JSON","parse","set","get","JSONbalance","actions","initBalance","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport {reactLocalStorage} from 'reactjs-localstorage';\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport NumberFormat from 'react-number-format';\nimport * as AppActions from '../actions'\n\nclass Menu extends Component {\n  componentDidMount(){\n    let purchased = [];\n    let balance;\n    if(this.props.purchasedlist.length !== 0){\n      purchased = JSON.parse(this.props.purchasedlist);\n      balance = purchased.balance;\n      purchased = purchased.purchasedlist;\n      reactLocalStorage.set('balance', this.props.purchasedlist);\n    }else if(reactLocalStorage.get('balance')){\n      let JSONbalance = JSON.parse(reactLocalStorage.get('balance'));\n      purchased = JSONbalance.purchasedlist;\n      balance   = JSONbalance.balance;\n    }\n    this.props.actions.initBalance(balance, purchased);\n  }\n\n  render(){\n    let purchased = [];\n    let balance = 0;\n    if(this.props.purchasedlist.length !== 0){\n      purchased = JSON.parse(this.props.purchasedlist);\n      balance  = purchased.balance;\n      purchased = purchased.purchasedlist;\n    }\n    return(\n      <div>\n        <header>\n          <div className=\"content\">\n            <div className=\"sub_media\">\n              <div className=\"left_bar\">\n                <NavLink exact to='/'>\n                  <h3>Tokoflix</h3>\n                </NavLink>\n              </div>\n\n              <div className=\"right_bar\">\n                <h3><NumberFormat value={balance} displayType={'text'} thousandSeparator={true} prefix={'Rp '} renderText={value => <span>{value}</span>} /></h3>\n              </div>\n            </div>\n          </div>\n\n        </header>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n    purchasedlist: state.balance\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    actions: bindActionCreators(AppActions, dispatch)\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Menu)\n"]},"metadata":{},"sourceType":"module"}