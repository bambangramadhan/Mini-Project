{"ast":null,"code":"import request from 'superagent';\n\nfunction loadFailure() {\n  return {\n    type: \"LOAD_FAILURE\"\n  };\n}\n\nfunction loadSuccess(items, total_pages) {\n  return {\n    type: \"LOAD_SUCCESS\",\n    items: items,\n    total_pages: total_pages\n  };\n}\n\nexport function loadMovie(url) {\n  return function (dispatch) {\n    return request.get(url).set('Accept', 'application/json').then(function (response) {\n      return response.json();\n    }).end(function (err, items) {\n      if (err) {\n        console.error(err);\n        dispatch(loadFailure());\n      } else {\n        dispatch(loadSuccess(items.results, items.total_pages));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/home/bambang/Desktop/Mini-Project/src/actions/movie.js"],"names":["request","loadFailure","type","loadSuccess","items","total_pages","loadMovie","url","dispatch","get","set","then","response","json","end","err","console","error","results"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;;AAEA,SAASC,WAAT,GAAsB;AACpB,SAAO;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAP;AACD;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,WAA5B,EAAwC;AACtC,SAAO;AAACH,IAAAA,IAAI,EAAE,cAAP;AAAuBE,IAAAA,KAAK,EAALA,KAAvB;AAA8BC,IAAAA,WAAW,EAAXA;AAA9B,GAAP;AACD;;AAED,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAuB;AAC5B,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOR,OAAO,CACbS,GADM,CACFF,GADE,EAENG,GAFM,CAEF,QAFE,EAEQ,kBAFR,EAGNC,IAHM,CAGD,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAHC,EAINC,GAJM,CAIF,UAACC,GAAD,EAAMX,KAAN,EAAgB;AACnB,UAAGW,GAAH,EAAO;AACLC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAP,QAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,OAHD,MAGK;AACHO,QAAAA,QAAQ,CAACL,WAAW,CAACC,KAAK,CAACc,OAAP,EAAgBd,KAAK,CAACC,WAAtB,CAAZ,CAAR;AACD;AACF,KAXM,CAAP;AAYD,GAbD;AAcD","sourcesContent":["import request from 'superagent';\n\nfunction loadFailure(){\n  return {type: \"LOAD_FAILURE\"}\n}\n\nfunction loadSuccess(items, total_pages){\n  return {type: \"LOAD_SUCCESS\", items, total_pages}\n}\n\nexport function loadMovie(url){\n  return dispatch => {\n    return request\n    .get(url)\n    .set('Accept', 'application/json')\n    .then((response) => response.json())\n    .end((err, items) => {\n      if(err){\n        console.error(err)\n        dispatch(loadFailure())\n      }else{\n        dispatch(loadSuccess(items.results, items.total_pages))\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}